{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d1b46390-4796-47a1-beb9-96268c09dc23",
   "metadata": {},
   "source": [
    "# Topic Modeling"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5cc93935-6ef0-4543-a2ad-7b85d8809d92",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import re\n",
    "import numpy as np\n",
    "import PyPDF2\n",
    "import requests\n",
    "import io\n",
    "from PyPDF2 import PdfFileReader"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "914dc1d1-36f9-4e46-9821-4e534ca491a8",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "url = 'https://www.nkeconwatch.com/nk-uploads/KJU-speech-2013.pdf'\n",
    "\n",
    "\n",
    "'''convert PDF to BytesIO file'''\n",
    "r = requests.get(url)\n",
    "f = io.BytesIO(r.content)\n",
    "\n",
    "\n",
    "'''extracting PDF text'''\n",
    "reader = PdfFileReader(f)\n",
    "number_of_pages = reader.getNumPages()\n",
    "\n",
    "content = []\n",
    "for page_number in range(number_of_pages):\n",
    "    page = reader.getPage(page_number)\n",
    "    content += page.extractText().split('\\n')\n",
    "\n",
    "    \n",
    "'''convert list to string'''\n",
    "def listToString(s):\n",
    "    str1 = \"\"\n",
    "    for ele in s:\n",
    "        str1 += ele\n",
    "    \n",
    "    return str1\n",
    "\n",
    "speech = listToString(content)\n",
    "\n",
    "\n",
    "'''split text into individual sentences'''\n",
    "text = speech.split('. ')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ce8cc275-3ebd-4eb9-bea7-2853a57a83ee",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>New Year Address Made by Kim Jong Un Pyongyang...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>The following is its full text: Dear comrades,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Reflecting the unanimous reverence of all the ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>I extend my warm greetings to the service pers...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>My New Year greetings also go to our compatrio...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>The present international situation demands th...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>By holding fast to the ideals of independence,...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>A brighter and broader vista is open for us in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>Let us vigorously strive to achieve the prospe...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>115 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  text\n",
       "0    New Year Address Made by Kim Jong Un Pyongyang...\n",
       "1    The following is its full text: Dear comrades,...\n",
       "2    Reflecting the unanimous reverence of all the ...\n",
       "3    I extend my warm greetings to the service pers...\n",
       "4    My New Year greetings also go to our compatrio...\n",
       "..                                                 ...\n",
       "110  The present international situation demands th...\n",
       "111  By holding fast to the ideals of independence,...\n",
       "112  A brighter and broader vista is open for us in...\n",
       "113  Let us vigorously strive to achieve the prospe...\n",
       "114                                                   \n",
       "\n",
       "[115 rows x 1 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.DataFrame(text, columns = ['text'])\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "2c5d2140-b01f-4782-881b-290627532f43",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>clean_text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>New Year Address Made by Kim Jong Un Pyongyang...</td>\n",
       "      <td>new year address made by kim jong un pyongyang...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>The following is its full text: Dear comrades,...</td>\n",
       "      <td>the following is its full text  dear comrades ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Reflecting the unanimous reverence of all the ...</td>\n",
       "      <td>reflecting the unanimous reverence of all the ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>I extend my warm greetings to the service pers...</td>\n",
       "      <td>i extend my warm greetings to the service pers...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>My New Year greetings also go to our compatrio...</td>\n",
       "      <td>my new year greetings also go to our compatrio...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>The present international situation demands th...</td>\n",
       "      <td>the present international situation demands th...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>By holding fast to the ideals of independence,...</td>\n",
       "      <td>by holding fast to the ideals of independence ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>A brighter and broader vista is open for us in...</td>\n",
       "      <td>a brighter and broader vista is open for us in...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>Let us vigorously strive to achieve the prospe...</td>\n",
       "      <td>let us vigorously strive to achieve the prospe...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>115 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  text  \\\n",
       "0    New Year Address Made by Kim Jong Un Pyongyang...   \n",
       "1    The following is its full text: Dear comrades,...   \n",
       "2    Reflecting the unanimous reverence of all the ...   \n",
       "3    I extend my warm greetings to the service pers...   \n",
       "4    My New Year greetings also go to our compatrio...   \n",
       "..                                                 ...   \n",
       "110  The present international situation demands th...   \n",
       "111  By holding fast to the ideals of independence,...   \n",
       "112  A brighter and broader vista is open for us in...   \n",
       "113  Let us vigorously strive to achieve the prospe...   \n",
       "114                                                      \n",
       "\n",
       "                                            clean_text  \n",
       "0    new year address made by kim jong un pyongyang...  \n",
       "1    the following is its full text  dear comrades ...  \n",
       "2    reflecting the unanimous reverence of all the ...  \n",
       "3    i extend my warm greetings to the service pers...  \n",
       "4    my new year greetings also go to our compatrio...  \n",
       "..                                                 ...  \n",
       "110  the present international situation demands th...  \n",
       "111  by holding fast to the ideals of independence ...  \n",
       "112  a brighter and broader vista is open for us in...  \n",
       "113  let us vigorously strive to achieve the prospe...  \n",
       "114                                                     \n",
       "\n",
       "[115 rows x 2 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import nltk\n",
    "from nltk.tokenize import RegexpTokenizer\n",
    "from nltk.corpus import stopwords\n",
    "\n",
    "stopwords = stopwords.words('english')\n",
    "punctuation = '!\"$%&\\'()*+,-./:;<=>?[\\\\]^_;{|}'\n",
    "\n",
    "def clean_text(text):\n",
    "    '''lowercase text'''\n",
    "    text = text.lower()\n",
    "    '''remove puncutation'''\n",
    "    text = re.sub('['+punctuation+']+', ' ', text)\n",
    "    '''remove numbers'''\n",
    "    text = re.sub('([0-9]+)', '', text)\n",
    "    \n",
    "    return text\n",
    "\n",
    "df['clean_text'] = df.text.apply(clean_text)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "5fcea710-20cc-47bb-b522-1e48d7ad18dc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>text</th>\n",
       "      <th>clean_text</th>\n",
       "      <th>token_text</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>New Year Address Made by Kim Jong Un Pyongyang...</td>\n",
       "      <td>new year address made by kim jong un pyongyang...</td>\n",
       "      <td>new year address made kim jong un pyongyang  j...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>The following is its full text: Dear comrades,...</td>\n",
       "      <td>the following is its full text  dear comrades ...</td>\n",
       "      <td>following full text  dear comrades  officers m...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Reflecting the unanimous reverence of all the ...</td>\n",
       "      <td>reflecting the unanimous reverence of all the ...</td>\n",
       "      <td>reflecting unanimous reverence servi ce person...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>I extend my warm greetings to the service pers...</td>\n",
       "      <td>i extend my warm greetings to the service pers...</td>\n",
       "      <td>extend warm greetings service personnel  peopl...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>My New Year greetings also go to our compatrio...</td>\n",
       "      <td>my new year greetings also go to our compatrio...</td>\n",
       "      <td>new year greetings also go compatriots  south ...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>The present international situation demands th...</td>\n",
       "      <td>the present international situation demands th...</td>\n",
       "      <td>present international situation demands ou r r...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>By holding fast to the ideals of independence,...</td>\n",
       "      <td>by holding fast to the ideals of independence ...</td>\n",
       "      <td>holding fast ideals independence  peac e frien...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>A brighter and broader vista is open for us in...</td>\n",
       "      <td>a brighter and broader vista is open for us in...</td>\n",
       "      <td>brighter broader vista open us new year  victo...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>Let us vigorously strive to achieve the prospe...</td>\n",
       "      <td>let us vigorously strive to achieve the prospe...</td>\n",
       "      <td>let us vigorously strive achieve prosperity co...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "      <td></td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>115 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  text  \\\n",
       "0    New Year Address Made by Kim Jong Un Pyongyang...   \n",
       "1    The following is its full text: Dear comrades,...   \n",
       "2    Reflecting the unanimous reverence of all the ...   \n",
       "3    I extend my warm greetings to the service pers...   \n",
       "4    My New Year greetings also go to our compatrio...   \n",
       "..                                                 ...   \n",
       "110  The present international situation demands th...   \n",
       "111  By holding fast to the ideals of independence,...   \n",
       "112  A brighter and broader vista is open for us in...   \n",
       "113  Let us vigorously strive to achieve the prospe...   \n",
       "114                                                      \n",
       "\n",
       "                                            clean_text  \\\n",
       "0    new year address made by kim jong un pyongyang...   \n",
       "1    the following is its full text  dear comrades ...   \n",
       "2    reflecting the unanimous reverence of all the ...   \n",
       "3    i extend my warm greetings to the service pers...   \n",
       "4    my new year greetings also go to our compatrio...   \n",
       "..                                                 ...   \n",
       "110  the present international situation demands th...   \n",
       "111  by holding fast to the ideals of independence ...   \n",
       "112  a brighter and broader vista is open for us in...   \n",
       "113  let us vigorously strive to achieve the prospe...   \n",
       "114                                                      \n",
       "\n",
       "                                            token_text  \n",
       "0    new year address made kim jong un pyongyang  j...  \n",
       "1    following full text  dear comrades  officers m...  \n",
       "2    reflecting unanimous reverence servi ce person...  \n",
       "3    extend warm greetings service personnel  peopl...  \n",
       "4    new year greetings also go compatriots  south ...  \n",
       "..                                                 ...  \n",
       "110  present international situation demands ou r r...  \n",
       "111  holding fast ideals independence  peac e frien...  \n",
       "112  brighter broader vista open us new year  victo...  \n",
       "113  let us vigorously strive achieve prosperity co...  \n",
       "114                                                     \n",
       "\n",
       "[115 rows x 3 columns]"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def token_text(text):\n",
    "    '''remove stopwords'''\n",
    "    text_token_list = [word for word in text.split(' ')\n",
    "                       if word not in stopwords]\n",
    "    text = ' '.join(text_token_list)\n",
    "    \n",
    "    return text\n",
    "\n",
    "df['token_text'] = df.clean_text.apply(token_text)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "f774e58d-093e-4117-8437-a4e4592e8e71",
   "metadata": {},
   "outputs": [],
   "source": [
    "x = df[\"token_text\"].apply(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "05af64e9-f661-4a54-9e82-14822f78cf5e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      new year address made kim jong un pyongyang  j...\n",
       "1      following full text  dear comrades  officers m...\n",
       "2      reflecting unanimous reverence servi ce person...\n",
       "3      extend warm greetings service personnel  peopl...\n",
       "4      new year greetings also go compatriots  south ...\n",
       "                             ...                        \n",
       "110    present international situation demands ou r r...\n",
       "111    holding fast ideals independence  peac e frien...\n",
       "112    brighter broader vista open us new year  victo...\n",
       "113    let us vigorously strive achieve prosperity co...\n",
       "114                                                     \n",
       "Name: token_text, Length: 115, dtype: object"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "74d73769-d45a-4c9e-a980-3811492e7c68",
   "metadata": {},
   "outputs": [
    {
     "ename": "ValueError",
     "evalue": "[E1041] Expected a string, Doc, or bytes as input, but got: <class 'pandas.core.series.Series'>",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[50], line 5\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;28;01mimport\u001b[39;00m \u001b[38;5;21;01mspacy\u001b[39;00m \n\u001b[0;32m      3\u001b[0m nlp \u001b[38;5;241m=\u001b[39m spacy\u001b[38;5;241m.\u001b[39mload(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124men_core_web_sm\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m----> 5\u001b[0m doc \u001b[38;5;241m=\u001b[39m \u001b[43mnlp\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m      7\u001b[0m \u001b[38;5;66;03m# Extract the lemma for each token and join\u001b[39;00m\n\u001b[0;32m      8\u001b[0m df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mlemma_token_text\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;241m.\u001b[39mjoin([token\u001b[38;5;241m.\u001b[39mlemma_ \u001b[38;5;28;01mfor\u001b[39;00m token \u001b[38;5;129;01min\u001b[39;00m doc])\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\MLenv\\lib\\site-packages\\spacy\\language.py:1014\u001b[0m, in \u001b[0;36mLanguage.__call__\u001b[1;34m(self, text, disable, component_cfg)\u001b[0m\n\u001b[0;32m    993\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__call__\u001b[39m(\n\u001b[0;32m    994\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[0;32m    995\u001b[0m     text: Union[\u001b[38;5;28mstr\u001b[39m, Doc],\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m    998\u001b[0m     component_cfg: Optional[Dict[\u001b[38;5;28mstr\u001b[39m, Dict[\u001b[38;5;28mstr\u001b[39m, Any]]] \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[0;32m    999\u001b[0m ) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m Doc:\n\u001b[0;32m   1000\u001b[0m     \u001b[38;5;124;03m\"\"\"Apply the pipeline to some text. The text can span multiple sentences,\u001b[39;00m\n\u001b[0;32m   1001\u001b[0m \u001b[38;5;124;03m    and can contain arbitrary whitespace. Alignment into the original string\u001b[39;00m\n\u001b[0;32m   1002\u001b[0m \u001b[38;5;124;03m    is preserved.\u001b[39;00m\n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   1012\u001b[0m \u001b[38;5;124;03m    DOCS: https://spacy.io/api/language#call\u001b[39;00m\n\u001b[0;32m   1013\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m-> 1014\u001b[0m     doc \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_ensure_doc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mtext\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   1015\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m component_cfg \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m   1016\u001b[0m         component_cfg \u001b[38;5;241m=\u001b[39m {}\n",
      "File \u001b[1;32m~\\anaconda3\\envs\\MLenv\\lib\\site-packages\\spacy\\language.py:1108\u001b[0m, in \u001b[0;36mLanguage._ensure_doc\u001b[1;34m(self, doc_like)\u001b[0m\n\u001b[0;32m   1106\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(doc_like, \u001b[38;5;28mbytes\u001b[39m):\n\u001b[0;32m   1107\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m Doc(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mvocab)\u001b[38;5;241m.\u001b[39mfrom_bytes(doc_like)\n\u001b[1;32m-> 1108\u001b[0m \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(Errors\u001b[38;5;241m.\u001b[39mE1041\u001b[38;5;241m.\u001b[39mformat(\u001b[38;5;28mtype\u001b[39m\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mtype\u001b[39m(doc_like)))\n",
      "\u001b[1;31mValueError\u001b[0m: [E1041] Expected a string, Doc, or bytes as input, but got: <class 'pandas.core.series.Series'>"
     ]
    }
   ],
   "source": [
    "import spacy \n",
    "\n",
    "nlp = spacy.load('en_core_web_sm')\n",
    "\n",
    "doc = nlp(x)\n",
    "\n",
    "# Extract the lemma for each token and join\n",
    "df['lemma_token_text'] = \" \".join([token.lemma_ for token in doc])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8c5c93d2-185e-4af7-b485-69c70155375e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
